<doc id="943598" url="https://th.wikipedia.org/wiki?curid=943598" title="ดี-ฮีป">ดี-ฮีป เป็นการคิดค้นโดย Johnson (ปี 1975) D- Heap , D-ary Heap , m-ary Heap หรือ k-ary Heap คือ Heap ที่มี children node ไม่เกิน d node ซึ่งลำดับความสำคัญของแต่ละโหนดสูงกว่าลำดับความสำคัญของ children node- ข้อดี -- ข้อดี -. - การใช้งานง่าย - สำหรับขนาดเล็กd≥2เราจะได้โครงสร้างข้อมูลแคชที่มีประสิทธิภาพมากขึ้นและเป็นBinary Heap - ขนาดใหญ่เป็นที่นิยมสำหรับโครงสร้างข้อมูลcode D-ary Heap code D-ary Heap. class D_aryHeap:testcase D-ary Heap testcase D-ary Heap. from daryheap2 import *1. scenario1:เพิ่มค่า 2. Given:เพิ่มค่าเท่ากับ 2,7,10,1,5,6,8 3. When:ทำการเพิ่มค่า 4. Then:ได้ผลลัพธ์คือ[[10, 8, 7, 1, 2, 5, 6] def test_case1():1. scenario2:ลบค่าที่มากที่สุด 2. Given:เพิ่มค่าเท่ากับ 2,6,11,8,13,16,4 3. When:ลบค่าที่มากที่สุด 4. Then:ได้ผลลัพธ์คือ[13, 11, 6, 8, 2, 4] def test_case2():1. scenario3:หาค่าที่มากที่สุด 2. Given:เพิ่มค่าเท่ากับ 5,9,19,18,25,13,7 3. When:หาค่าที่มากที่สุด 4. Then:ได้ผลลัพธ์คือ25 def test_case3():1. scenario4:หาขนาด 2. Given:เพิ่มค่าเท่ากับ 6,9,5,11,31,2,23,1,4 3. When:หาขนาด 4. Then:ได้ผลลัพธ์คือ9 def test_case4():1. scenario5:หาค่าตำแหน่งที่กำหนด 2. Given:เพิ่มค่าเท่ากับ 7,14,19,22,1,5,3 หาตำแหน่งที่1 3. When:หาค่าตำแหน่งที่กำหนด 4. Then:ได้ผลลัพธ์คือ7 def test_case5():Big-o Big-o. เนื่องจากหากรณีตำแหน่งที่ต้องการ ,กรณีหาค่าที่มากที่สุด ,กรณีแสดงข้อมูลไม่มีbest case และworst case เนื่องจากเป็นO(1)</doc>
