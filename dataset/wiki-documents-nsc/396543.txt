<doc id="396543" url="https://th.wikipedia.org/wiki?curid=396543" title="ปัญหาคอนกรูเอนซ์ของจำนวนเต็มยกกำลังสองมอดุโลเอ็น">ปัญหาคอนกรูเอนซ์ของจำนวนเต็มยกกำลังสองมอดุโลเอ็น ปัญหาคอนกรูเอนซ์ของจำนวนเต็มยกกำลังสองมอดุลโลเอ็น () ในเรื่องทฤษฎีจำนวนนั้นได้ถูกนำมาใช้บ่อยครั้งในปัญหาที่เกี่ยวข้องกับการแยกตัวประกอบของจำนวนเต็ม โดยเริ่มต้นจากปัญหาที่ว่า " จงหาจำนวนเต็ม x,y ที่ทำให้สมการดังกล่าวเป็นจริง เมื่อกำหนดจำนวนเต็ม n " โดย ซึ่งการใช้ขั้นตอนวิธีการแยกตัวประกอบของจำนวนเต็มของแฟร์มาต์ () โดยการพยายามแยกตัวประกอบของ n ในรูปแบบ n&nbsp;=&nbsp;x&nbsp;−&nbsp;y&nbsp;=&nbsp;(x&nbsp;+&nbsp;y)&nbsp;(x&nbsp;−&nbsp;y). นั้น ต้องใช้เวลาที่ยาวนานมากในการค้นหาคำตอบ เพราะต้องค้นหาคำตอบที่เป็นไปได้เป็นจำนวนมาก และมีตัวเลขที่อาจเป็นคำตอบได้จริงน้อยมาก ในทางปฏิบัติจึงไม่นิยมใช้ แต่จะอาศัยการแยกตัวประกอบจากปัญหาที่ง่ายกว่า ซึ่งคือ ปัญหาคอนกรูเอนซ์ของจำนวนเต็มยกกำลังสองมอดุลโลเอ็น ซึ่งสามารถเขียนเป็นสมการได้ดังนี้ขั้นตอนวิธีการแก้ปัญหา ขั้นตอนวิธีการแก้ปัญหา. จากสมการ formula_2 จะได้ว่าเราสามารถเปลี่ยนรูปของปัญหาดังนี้ ซึ่งหมายความว่า formula_7 สามารถหาร formula_8 ลงตัว แต่ด้วยข้อกำหนดที่ว่า formula_3 จึงจะได้ว่า formula_10หรือ formula_11 ไม่สามารถหารด้วย n ลงตัวได้เพียงตัวใดตัวหนึ่ง โดยอาจใช้วิธีการแก้ปัญหาดังนี้ ในการหาตัวหารร่วมมากระหว่าง a และ b โดยกำหนด a > b จะมีวิธีการหาตัวหารร่วมมากดังนี้ โดยมีข้อกำหนดว่า ทุกๆขั้นตอนที่ k ใดๆ ( k คือ 0 หรือ จำนวนเต็มบวกใดๆ) r = q r + r ซึ่ง ( 0≤ r , q formula_19 ± formula_20 โดย qจะมีเครื่องหมายเป็นลบเมื่อ a เป็นจำนวนเต็มบวก และ b เป็นจำนวนเต็มลบ หรือ a เป็นจำนวนเต็มลบ และ b เป็นจำนวนเต็มบวก) โดยจะมีขั้นตอนการดำเนินการดังนี้ จากสมการข้างต้นจะได้ q = formula_12 ซึ่งจะเห็นได้ว่า จะสามารถตรวจคำตอบได้อย่างรวดเร็วซึ่งใช้เวลาไม่เกิน O(h) โดย h เป็นจำนวนหลักของ b ที่เป็นจำนวนที่น้อยกว่า a จากข้อกำหนด ซึ่ง h = formula_22 + 1 ( โดย k= log(b) ) formula_28 เพราะฉะนั้นจะได้ว่า x = 6 , y = 1 เป็นคำตอบหนึ่งของสมการ ซึ่งจากการตรวจสอบ (6-1,35) = 5 และ (6+1,35) = 7 ซึ่งจะพบว่าตรงตามเงื่อนไขที่ได้กำหนดไว้ จึงถือว่า x=6,y=1 เป็นคำตอบหนึ่งของสมการนี้รหัสเทียมและประสิทธิภาพการทำงาน รหัสเทียมและประสิทธิภาพการทำงาน. จากแนวคิดขั้นตอนวิธีการแก้ปัญหาข้างต้น จะพบว่า ถ้าจะทำการเขียนรหัสเทียม () เพื่อแสดงขั้นตอนการทำงานที่เกิดขึ้น หรือเป็นการแสดงขั้นตอนเบื้องต้นที่เกิดขึ้นในการใช้คอมพิวเตอร์ในการดำเนินการแก้ไขปัญหานั้น จะสามารถแสดงขั้นตอนต่างๆเป็นรหัสเทียมได้ดังนี้ จากรหัสเทียมข้างต้น function gcd จะทำการหาค่าของตัวหารร่วมมากระหว่าง a และ b แล้วทำการคืนค่าตัวหารร่วมมากกลับมาจากการเรียกใช้ function โดยจะเสียเวลาทำงานไม่เกิน O(h) โดย h เป็นจำนวนหลักของ b ที่เป็นจำนวนที่น้อยกว่า a จากข้อกำหนด ซึ่ง h = formula_22 + 1 ( โดย k= log(b) ) ตามที่ได้กล่าวไปแล้วข้างต้น ซึ่งเมื่อนำไปใช้ต่อไปในขั้นตอนการแก้ปัญหาต่อไปในรูปแบบที่นำเสนอไปดังข้างต้น ซึ่งอาจเขียนเป็นรหัสเทียมได้ดังนี้ สำหรับรหัสเทียมต่อไปนี้จะเป็นการนำไปใช้ต่อเพื่อหาผลลัพธ์ในรูปแบบที่ 1.) จากรหัสข้างต้น สามารถอธิบายได้ดังนี้ โดยเริ่มต้นนั้นกำหนดค่าให้ x= formula_24 เพื่อจะได้ทำการค้นหาในช่วง formula_24 ถึง n ตามต้องการ แล้วจึงทำการทดสอบค่า y ที่เป็นไปได้ทั้งหมดซึ่งเป็นจำนวนเต็มบวก (ตั้งแต่ 1 ถึง x) ซึ่งถ้าพบว่าตรงตามเงื่อนไขที่ต้องการก็จะแสดงคำตอบและหยุดการทำงานทันทีเมื่อพบคำตอบชุดหนึ่งแล้ว ซึ่งจะทำให้เสียเวลาการทำงานรวมทั้งสิ้นจากการทำวงวนภายนอก Θ (n) และกระบวนการทำงานภายในที่ต้องวิ่งแปรผันตามค่า x รวมทั้งสิ้น O(x) จึงเสียเวลา O(formula_32) และเมื่อคำนึงถึงการเรียกใช้ function gcd ที่มีภาระเป็น O(log n) แล้ว จึงได้ว่ากระบวนการทำงานตามรหัสเทียมดังกล่าวจะใช้เวลาในการทำงานรวมทั้งสิ้น O(formula_32 log(n)) สำหรับรหัสเทียมต่อไปนี้จะเป็นการนำไปใช้ต่อเพื่อหาผลลัพธ์ในรูปแบบที่ 2.) จากรหัสข้างต้น สามารถอธิบายได้ดังนี้ โดยเริ่มต้นนั้นกำหนดค่าให้ x= formula_24 เพื่อจะได้ทำการค้นหาในช่วง formula_24 ถึง n ตามต้องการ เช่นเดียวกับรูปแบบที่ 1.) แล้วจึงทำการหาค่า z โดย formula_23 โดยทำการทดสอบว่า formula_25 เป็นจำนวนเต็มหรือไม่ โดยถ้าเป็นจำนวนเต็มจะกำหนดให้ y = formula_38 แล้วจึงทำการตรวจคำตอบโดยการตรวจสอบตัวหารร่วมมากของ (x+y,n) และ (x-y,n) ว่าเป็นไปตามเงื่อนไขที่ได้กำหนดหรือไม่ ซึ่งถ้าพบว่าตรงตามเงื่อนไขที่ต้องการก็จะแสดงคำตอบและหยุดการทำงานทันทีเมื่อพบคำตอบชุดหนึ่งแล้ว ซึ่งจะทำให้เสียเวลาการทำงานรวมทั้งสิ้นจากการทำวงวน Θ (n) และเมื่อคำนึงถึงการเรียกใช้ function gcd ที่มีภาระเป็น O(log n) แล้ว จึงได้ว่ากระบวนการทำงานตามรหัสเทียมดังกล่าวจะใช้เวลาในการทำงานรวมทั้งสิ้น O(n log(n)) ซึ่งจะเห็นได้ว่าอาจทำงานเร็วกว่ารูปแบบที่ 1.) แต่ก็จะใช้หน่วยความจำที่มากกว่าเพราะต้องคำนวณ formula_39 mod nปัญหาที่เกี่ยวข้อง ปัญหาที่เกี่ยวข้อง. สำหรับปัญหาคอนกรูเอนซ์ของจำนวนเต็มยกกำลังสองมอดุลโลเอ็นนั้น โดยวิธีการแก้ปัญหาที่ได้นำเสนอนั้น เป็นวิธีการพื้นฐานเท่านั้น ซึ่งได้มีผู้พัฒนาวิธีการแก้ปัญหาดังกล่าวเพื่อให้มีประสิทธิภาพยิ่งขึ้นในทางปฏิบัติ เช่น วิธีการแยกตัวประกอบแบบดิกซ์ซัน() รวมถึงเป็นพื้นฐานในการแก้ไขปัญหาอื่นๆอีกมากที่เกี่ยวข้องกับทฤษฎีจำนวน เช่น ปัญหาตะแกรงกำลังสอง() , ปัญหาตะแกรงของจำนวนเต็มใดๆ() เป็นต้นเพิ่มเติม เพิ่มเติม. สำหรับนิยามสัญกรณ์เชิงเวลาที่ได้ใช้เพื่อประเมินประสิทธิภาพเชิงเวลา เช่น สัญกรณ์โอใหญ่ () รวมถึง ความรู้เกี่ยวกับสัญกรณ์เชิงเวลาในรูปแบบภาพยนตร์เพื่อการศึกษาภาษา ซึ่งสามารถค้นคว้าเพิ่มเติมได้ทั้งในรูปแบบของภาพยนตร์เพื่อการศึกษาและบทความเพื่อความเข้าใจ รวมถึงข้อมูลอื่นๆเพื่อประกอบการแก้ปัญหานั้น เช่น บทความทางด้านความรู้ต่างๆเกี่ยวข้องกับทฤษฎีจำนวน เช่น ความรู้ที่เกี่ยวข้องกับเลขคณิตมอดุลาร์() รวมถึงความสัมพันธ์ในรูปแบบคอนกรูเอนซ์() และสัญลักษณ์ต่างๆที่ใช้ในการเขียนรหัสเทียม รวมถึงหลักภาษาในการเขียนรหัสเทียมเพื่อบรรยายขั้นตอนวิธีเพื่อการทำงานตามความต้องการ สามารถอ่านเพิ่มเติมได้ในบทความ How to write Pseudocode (ในรูปแบบ.doc) รวมถึง รวมถึงความรู้เพื่อประกอบความเข้าใจอื่นๆซึ่งสามารถพบได้ในส่วนของอ้างอิง</doc>
