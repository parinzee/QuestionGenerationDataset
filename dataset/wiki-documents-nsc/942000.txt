<doc id="942000" url="https://th.wikipedia.org/wiki?curid=942000" title="ต้นไม้นิพจน์ทวิภาค">ต้นไม้นิพจน์ทวิภาค ต้นไม้พิจน์ หรือ binary expression tree เป็นต้นไม้แบบไบนารี (Binary Tree) ที่มีการสร้างขึ้นจากตัวกระทำ(operand) และ เครื่องหมาย(operators) ทางคณิตศาสตร์ของนิพจน์ โดยการวางตัวกระทำที่ leaf node และวางเครื่องหมายไว้ที่ root nodeการสร้าง Expression Tree การสร้าง Expression Tree. จะมีการนำ Postfix Expression มาใช้ในการทำ Expression tree 1. เริ่มจากการอ่านนิพจน์ทางคณิตศาสตร์ (Expression) ทีละตัว 2. ถ้าตัวที่ได้เป็น Operand (ตัวถูกดำเนินการ) ให้สร้างโหนดของ tree หนึ่งโหนดแล้ว push ข้อมูลลงบน Stack 3. หากตัวที่อ่านได้เป็น Operator (ตัวดำเนินการ) ให้ทำการ pop ข้อมูลออกจาก Stack 2 ครั้ง เนื่องจาก Operator ใช้เป็น Binary Operator (Operator 1 ตัว ต้องการ Operand 2 ตัว) ซึ่งจะได้ trees T และ T (T นำออกก่อน) แล้วให้นำมาสร้างเป็น tree ใหม่ที่มีราก (root) เป็นตัว operator และมี left และ right children เป็น T และ T ตามลำดับ จากนั้นให้ใส่ tree ใหม่นี้กลับลง stackตัวอย่างของ Expression TreeCode ของ Expression Tree Code ของ Expression Tree. class ExpressionTree: def isOperator(char): def buildTree(postfix): def inorder(t):แหล่งอ้างอิง แหล่งอ้างอิง. geeksforgeeks Expression Tree ค้นหาเมื่อ 30 มีนาคม 2561 nattee ต้นไม้นิพจน์ ค้นหาเมื่อ 30 มีนาคม 2561</doc>
