<doc id="151667" url="https://th.wikipedia.org/wiki?curid=151667" title="พอลิกล็อต">พอลิกล็อต พอลิกล็อต () ในทางคอมพิวเตอร์ หมายถึง โปรแกรมคอมพิวเตอร์หรือสคริปต์ที่เขียนขึ้นในรูปแบบที่ถูกต้องของภาษาโปรแกรมหลายภาษาด้วยรหัสต้นฉบับอันเดียวกัน ซึ่งโปรแกรมจะทำงานหรือให้ผลลัพธ์เหมือนกันจากการแปลด้วยคอมไพเลอร์หรืออินเทอร์พรีเตอร์ของภาษานั้นอย่างอิสระ โดยทั่วไปแล้วพอลิกล็อตเขียนขึ้นจากการผสานภาษาซี ซึ่งอนุญาตให้มีการจำกัดความ (define) วลีต่างๆ ได้ด้วยตัวประมวลผลก่อน (preprocessor) รวมกับภาษาสคริปต์อื่นๆ เช่น ภาษาลิสป์ ภาษาเพิร์ล หรือ sh เทคนิคที่ใช้เป็นปกติที่สุดสองอย่างสำหรับการสร้างโปรแกรมพอลิกล็อตคือ การใช้ประโยชน์จากอักขระแทนหมายเหตุ (comment) ที่แตกต่างกัน และการจำกัดความวลีด้วยการทำงานในภาษาอื่น และเทคนิคที่ใช้ได้ดีอีกอย่างหนึ่งคือ การพลิกแพลงไวยากรณ์ของภาษา จากตัวอย่างต่อไปนี้เป็นพอลิกล็อตที่เขียนขึ้นเพื่อทำงานบน ภาษาซีแบบแอนซี (ANSI C) ภาษาพีเอชพี และ bash โปรแกรมดังกล่าวจะแสดงข้อความ codice_1 พร้อมทั้งขึ้นบรรทัดใหม่บนจอภาพ สามารถอธิบายได้ดังนี้- "codice_2" หมายถึงประพจน์ของตัวประมวลผลก่อนในภาษาซี แต่หมายถึงการระบุหมายเหตุใน bash และภาษาพีเอชพี - "codice_3" คือหมายเหตุในภาษาพีเอชพี และหมายถึงสารบบราก (root directory) ใน bash - การเปลี่ยนทางของเชลล์ถูกใช้เพื่อขจัดผลลัพธ์ที่ไม่ต้องการ - โค้ดระบุตำแหน่งภาษาพีเอชพี "codice_4" กับ "codice_5" ยังคงใช้ได้ผล แม้จะอยู่ในบรรทัดที่ระบุหมายเหตุเอาไว้ - ประพจน์ "codice_6" สามารถใช้ได้ทั้งในภาษาพีเอชพีและ bash ในขณะที่ภาษาซีจะใช้ "codice_7" เป็นเครื่องมือแปลงประพจน์นั้นให้กลายเป็น "codice_8" ขณะแปลภาษา - อักขระกำหนดหมายเหตุสามารถผสานกันเพื่อให้ทำงานได้หลากหลาย - "codice_9" เป็นประพจน์ที่ถูกต้องทั้งใน bash และภาษาพีเอชพี - "codice_10" เป็นคำสั่งในตัว (shell builtin) ของ bash ซึ่งเหมือนกับฟังก์ชันในภาษาซี เว้นแต่ไม่มีการกำหนดวงเล็บ (ตัวประมวลผลก่อนของภาษาซีจะเป็นผู้เติมวงเล็บให้) - สามบรรทัดสุดท้ายถูกใช้เฉพาะใน bash เพื่อเรียกฟังก์ชัน "codice_11" ในภาษาพีเอชพีฟังก์ชันนี้ได้นิยามไว้แล้วแต่ไม่มีการใช้ ส่วนภาษาซีไม่จำเป็นต้องเรียกใช้</doc>
