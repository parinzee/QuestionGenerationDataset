<doc id="71655" url="https://th.wikipedia.org/wiki?curid=71655" title="อะแด็ปเตอร์แพตเทิร์น">อะแด็ปเตอร์แพตเทิร์น อะแด็ปเตอร์แพตเทิร์น (Adapter pattern) เป็นดีไซน์แพตเทิร์น ที่ใช้เชื่อมการทำงานระหว่างคลาสผู้เรียกและคลาสที่ถูกเรียกในกรณีที่คลาสที่ถูกเรียกมีเมธอดที่แตกต่างจากที่ผู้เรียกคาดหวัง ตัวอย่างที่เห็นได้ในชีวิตประจำวันเช่น หม้อแปลงไฟฟ้า หรือปลั๊กไฟที่มีขาต่างรูปทรงต่างกันจะต้องมีตัวแปลงเพื่อต่อเชื่อมเป็นต้นการนำไปใช้งาน การนำไปใช้งาน. การสร้างคลาสสำหรับทำหน้าที่เป็นอะแด็ปเตอร์สามารถทำได้สองวิธีดังนี้ วิธีการแบบ inheritance ให้คลาสอะแด็ปเตอร์ซับคลาสจากคลาสที่จะถูกใช้งานจริงและให้อิมพลิเมนท์อินเตอร์เฟสตามที่คลาสผู้เรียกคาดหวัง ความสัมพันธ์ระหว่างผู้แปลงและผู้ถูกแปลงจะเป็นในแบบ is-a ดังภาพประกอบ วิธีการแบบ delegation ให้คลาสอะแด็ปเตอร์อิมพลิเมนท์อินเตอร์เฟสตามที่คลาสผู้เรียกคาดหวังแต่ไม่ต้องซับคลาส คลาสอะแด็ปเตอร์เรียกเมธอดของคลาสที่จะถูกใช้งานผ่านทางอ็อบเจกต์ของคลาสที่ถูกใช้งานนั้น ความสัมพันธ์ระหว่างผู้แปลงและผู้ถูกแปลงจะเป็นในแบบ has-a ดังภาพตัวอย่างโปรแกรมภาษาจาวา ตัวอย่างโปรแกรม. ภาษาจาวา. ซอร์สโค้ดอะแด็ปเตอร์แบบ inheritance ซอร์สโค้ดอะแด็ปเตอร์แบบ delegation อินเตอร์เฟสที่โค้ดผู้เรียกคาดหวัง คลาสที่ถูกแปลง การเรียกใช้งาน</doc>
