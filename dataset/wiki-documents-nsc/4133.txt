<doc id="4133" url="https://th.wikipedia.org/wiki?curid=4133" title="การเขียนโปรแกรมเชิงวัตถุ">การเขียนโปรแกรมเชิงวัตถุ การเขียนโปรแกรมเชิงวัตถุ () คือหนึ่งในรูปแบบการเขียนโปรแกรมคอมพิวเตอร์ ที่ให้ความสำคัญกับ วัตถุ ซึ่งสามารถนำมาประกอบกันและนำมาทำงานรวมกันได้ โดยการแลกเปลี่ยนข่าวสารเพื่อนำมาประมวลผลและส่งข่าวสารที่ได้ไปให้ วัตถุ อื่นๆที่เกี่ยวข้องเพื่อให้ทำงานต่อไป แนวคิดการเขียนโปรแกรมแบบดังเดิมมักนิยมใช้ ในการสร้างเว็บไซต์ต่างๆเปรียบเทียบแนวคิดระหว่างการเขียนโปรแกรมเชิงกระบวนการ และเชิงวัตถุ เปรียบเทียบแนวคิดระหว่างการเขียนโปรแกรมเชิงกระบวนการ และเชิงวัตถุ. ตัวอย่างตู้ขายเครื่องดื่มอัตโนมัติวิธีการคิดแบบการเขียนโปรแกรมเชิงกระบวนการ วิธีการคิดแบบการเขียนโปรแกรมเชิงกระบวนการ. เมื่อมีการหยอดเหรียญเข้าตู้1. มีการแสดงผลชนิดของน้ำในตู้ที่สามารถเลือกซื้อได้ 2. ตรวจสอบจำนวนน้ำกระป๋องที่มีอยู่ในตู้ 3. รับผลการเลือกชนิดน้ำ 4. ส่งน้ำที่เลือกออกมาจากช่อง 5. จัดเก็บเงินเข้าระบบ 6. หากมีเงินทอน ให้ทอนเงินที่เหลือ ที่ช่องรับเงินทอนวิธีการคิดแบบการเขียนโปรแกรมเชิงวัตถุ วิธีการคิดแบบการเขียนโปรแกรมเชิงวัตถุ. ตู้ขายเครื่องดื่มอัตโนมัติ ประกอบด้วยส่วนประกอบต่างๆได้แก่ หน่วยตรวจสอบและจัดการเรื่องเงิน หน่วยจัดการเครื่องดื่ม หน่วยแสดงผลและรอรับคำสั่ง หมายเหตุ ตัวอย่างนี้เป็นเพียงตัวอย่างโดยสังเขปแนวทางการออกแบบและแก้ปัญหา แนวทางการออกแบบและแก้ปัญหา. ความท้าทายในการออกแบบและพัฒนาโปรแกรมเชิงวัตถุมีหลายด้าน โดยแนวทางดังต่อไปนี้ เป็นแนวทางที่ได้รับการยอมรับอย่างกว้างขวางในการใช้เพื่อแก้ไขปัญหาดีไซน์แพตเทิร์น - แบบแผนและแนวทางการออกแบบ ดีไซน์ ดีไซน์แพตเทิร์น - แบบแผนและแนวทางการออกแบบ ดีไซน์. ในการออกแบบและการพัฒนาโปรแกรมเชิงวัตถุ ได้มีการรวบรวมบันทึกวิธีการแก้ปัญหาที่ใช้ได้ผลสำหรับปัญหาที่เกิดขึ้นซ้ำๆ เสมอๆ วิธีการแก้ไขเหล่านี้สามารถนำมาใช้ได้บ่อยๆ ในสถานการณ์ที่หลากหลาย บันทึกรวบรวมนี้มีชื่อเรียกเฉพาะว่า ดีไซน์แพตเทิร์น (Design Patterns) Design Patterns ซึ่งเป็นหนังสือที่ออกจัดจำหน่ายเมื่อปี 2538 โดยผู้แต่งร่วม 4 คนได้แก่ Erich Gamma, Richard Helm, Ralph Johnson และ John Vlissides หรือที่รู้จักในนามของ GoF (Gang of four) ถือว่าเป็น แบบแผนและแนวทางการออกแบบ ที่ได้รับความนิยมและเป็นที่รู้จักอย่างกว้างขวางในการนำมาประยุกต์ใช้งานจริงการเขียนโปรแกรมเชิงวัตถุและฐานข้อมูล การเขียนโปรแกรมเชิงวัตถุและฐานข้อมูล. การเขียนโปรแกรมเชิงวัตถุและระบบจัดการฐานข้อมูลเชิงสัมพันธ์ (Relational Database Management Systems) ได้ถูกใช้งานร่วมกันอย่างแพร่หลายในปัจจุบัน แต่เนื่องจากฐานข้อมูลเชิงสัมพันธ์ไม่สามารถเก็บข้อมูลเชิงวัตถุได้โดยตรง จึงมีความจำเป็นที่จะต้องเชื่อมต่อเทคโนโลยีทั้งสองเข้าด้วยกัน การแก้ปัญหาสองแบบที่ได้รับความนิยมแพร่หลายคือการใช้ตัวส่งระหว่างโมเดลเชิงวัตถุและเชิงสัมพันธ์ (Object-Relational Mapping: ORM) อีกวิธีการคือการใช้งานระบบจัดการฐานข้อมูลเชิงวัตถุ ( database Management Systems) แทนที่ระบบจัดการฐานข้อมูลเชิงสัมพันธ์ แต่วิธีการนี้ก็ยังไม่ได้รับความนิยมมากนักโปรแกรมเชิงวัตถุและการเทียบเคียงกับโลกของความเป็นจริง โปรแกรมเชิงวัตถุและการเทียบเคียงกับโลกของความเป็นจริง. การเขียนโปรแกรมเชิงวัตถุสามารถนำมาใช้จำลองการทำงานตามโลกของความเป็นจริงได้ แต่ไม่ได้เป็นที่นิยมนักเนื่องจากมีนักวิชาการจำนวนหนึ่งที่ไม่เห็นด้วยและมองว่าไม่ใช่วิธีการที่ถูกต้อง ปัจจุบันวิธีการมาตรฐานที่ใช้ในการเทียบเคียงกับโลกของความเป็นจริง ตามแนวทางของคณิตศาสตร์คือ Circle-ellipse problem ซึ่งก็ถูกต้องบางส่วน แต่แนวคิดการสร้างยังคงต้องให้สอดคล้องกับความเป็นจริงของพื้นฐานธรรมชาติที่เป็นไปได้ผนวกกับคณิตศาสตร์ด้วย เพื่อให้เกิดสมดุลตัวอย่างภาษาที่สนับสนุนการเขียนโปรแกรมเชิงวัตถุตัวอย่างภาษาที่สนับสนุนการเขียนโปรแกรมเชิงวัตถุ. - ABAP - Ada 95 - C# - C++ - Common Lisp Object System - Delphi++ - Eiffel - Fortran 2003 - JADE - Java - Javascript - Modula-3 - Nice - Oberon - Objective-C - Objective Modula-2 - OCaml - Object Pascal - Perl - PHP - Python - REALbasic - Ruby - Simula - Sleep - Smalltalk - Specman - SystemVerilog - UnrealScript - Visual Basic - Visual Basic.NET - Visual C#.NET - Visual FoxPro</doc>
