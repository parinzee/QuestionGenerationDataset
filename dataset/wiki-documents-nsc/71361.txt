<doc id="71361" url="https://th.wikipedia.org/wiki?curid=71361" title="ส่วนล้น">ส่วนล้น ส่วนล้น () คือ การที่เมื่อเรานำเลขสองจำนวน (เลขทั้งสองจำนวนเป็นตัวเลขแบบคิดเครื่องหมาย “Signed Number”) มาทำการบวกหรือลบกันแล้วผลลัพธ์ที่ได้ออกมานั้นอยู่นอกขอบเขตที่จำนานของบิตสามารถรับได้ ทำให้ผลลัพธ์ที่ได้ออกมานั้นเกิดการผิดพลาดกรณีของการเกิด Overflow กรณีของการเกิด Overflow.   แต่ใน ผลลัพธ์ แบบ 8 บิต จะแสดงคำตอบได้ เพียงแค่ 0100 1100 จะเห็นว่าผลลัพธ์ บิตแรก เป็น 0 ซึ่งหมายความว่า เป็นจำนวนบวก แต่ในความจริงแล้วผลลัพธ์เป็นจำนวนลบ ทำให้คำตอบที่ได้นั้นผิดพลาดจากในกรณีที่2 ถ้าเราต้องการบวกค่าที่ได้ผลลัพธ์ออกมา มีบิตเกินกว่าขอบเขตที่กำหนด เราควรเพิ่มบิต ให้มากขึ้นเพื่อให้คำตอบที่ออกมานั้นถูกต้อง จากตัวอย่าง ควรเพิ่มบิตจาก 8 บิต เป็น 16 บิต ปัญหาการเกิด Overflow เป็น ปัญหา ที่เกิดจากSoftWareไม่ใช่ ปัญหา ที่เกิดจาก HardWare โปรแกรมเมอร์นั้นจะ ต้องทดสอบการเกิด Overflow หลังจากบวกหรือลบ แล้ว โดยต้องทำการตรวจสอบและเปลี่ยนแปลงของบิตเครื่องหมาย และโปรแกรมเมอร์เองก็ควรที่จะเขียนคำสั่งไว้สำหรับเปรียบเทียบบิตเครื่องหมายของทั้งสองจำนวนที่ จะบวกกัน ไว้ด้วย เพื่อคอมพิวเตอร์จะได้เผื่อบิตไว้ใช้ในการคำนวณได้ และผลลัพธ์ที่ได้จะได้มีความถูกต้องแม่นยำ</doc>
