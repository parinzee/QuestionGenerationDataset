<doc id="940769" url="https://th.wikipedia.org/wiki?curid=940769" title="รายการจัดตัวเอง">รายการจัดตัวเอง รายการจัดตัวเอง () เป็นรายการที่มีการจัดการลำดับความสำคัญขององค์ประกอบภายในรายการด้วยตัวเอง โดยที่อิงจากการวิเคราะห์พฤติกรรมในการจัดตัวเองเพื่อปรับปรุงเวลาในการเข้าถึงข้อมูลโดยเฉลี่ย ซี่งมีจุดมุ่งหมาย ของรายการจัดตัวเอง คือ ปรับปรุงประสิทธิภาพของการค้นหาเชิงเส้นด้วยการย้ายรายการที่เข้าถึงบ่อยไปอยู่ที่บริเวณหัวของรายการการวิเคราะห์เวลาทำงานสำหรับการเข้าถึงBest case การวิเคราะห์เวลาทำงานสำหรับการเข้าถึง. Best case. กรณีที่ข้อมูลหรือโหนดที่ต้องการเข้าถึงนั้นเป็นส่วนหัวของข้อมูล ซึ้งจะทำให้มีความซับซ้อนเป็น formula_1Worst case Worst case. กรณีที่ข้อมูลหรือโหนดที่ต้องการเข้าถึงนั้นเป็นส่วนท้ายของข้อมูล หรือไม่มีอยู่ในรายการ ซึ้งจะทำให้มีความซับซ้อนที่มีการทำงานแบบเชิงเส้นเป็น formula_2ตัวอย่างขั้นตอนวิธี (Algorithm)ตัวอย่างขั้นตอนวิธี (Algorithm). 1. Move to front Method (MTF) 2. Count Method (Frequency counter) 3. Transpose MethodMove to front Method (MTF)หลักการทำงาน Move to front Method (MTF). หลักการทำงาน.   ไม่ว่าจะทำการเข้าถึงข้อมูลที่ตำแหน่งใดใด ก็จะทำการย้ายข้อมูลนั้นไปไว้ต้นรายการเสมอข้อดี ข้อดี.   สามารถปรับรูปแบบการเข้าถึงข้อมูลได้อย่างรวดเร็วข้อเสีย ข้อเสีย.   จะจัดลำดับความสำคัญของข้อมูลนั้นได้ยากตัวอย่างโค้ดในภาษา Python ตัวอย่างโค้ดในภาษา Python. def move2front(array,user):วิเคราะห์ความซับซ้อนของโค้ด วิเคราะห์ความซับซ้อนของโค้ด. จากโค้ดในบรรทัดที่ 3 และ6 มีความซับซ้อนเป็น formula_2 จึงทำให้ best case และ worst case โค้ดมีความซับซ้อน formula_2 เหมือนกันCount Method (frequency counter)หลักการทำงาน Count Method (frequency counter). หลักการทำงาน.   ข้อมูลแต่ละตำแหน่งจะมีการเก็บค่าจำนวนครั่งในการเข้าถึงข้อมูลนั้นจากนั้นจะมีการเรียงลำดับข้อมูลใหม่ตามความถี่ที่เข้าถึงข้อมูล ซึ่งวิธีการนี้ต้องใช้พื้นที่เพิ่มเติมในการจัดเก็บข้อมูลข้อดี ข้อดี.   ท้อนให้เห็นถึงรูปแบบการเข้าถึงข้อมูลที่แท้จริงให้สมจริงมากขึ้นข้อเสีย ข้อเสีย.   ต้องมีพื้นที่เพิ่มในการเก็บจำนวนที่นับ และปรับตัวให้เข้ากับการเปลี่ยนแปลงอย่างรวดเร็วได้ค่อนข้างยากตัวอย่างโค้ดในภาษา Python ตัวอย่างโค้ดในภาษา Python. def freqCount(array,user,memory):วิเคราะห์ความซับซ้อนของโค้ด วิเคราะห์ความซับซ้อนของโค้ด. จากโค้ดในบรรทัดที่ 3 และ8 มีความซับซ้อนเป็น formula_2 จึงทำให้ best case โค้ดมีความซับซ้อน formula_2 และ worst case โค้ดมีความซับซ้อน formula_7เพราะมี 2-nested loopTranspose Methodหลักการทำงาน Transpose Method. หลักการทำงาน.   ไม่ว่าจะทำการเข้าถึงข้อมูลที่ตำแหน่งใดใด ก็จะทำการย้ายข้อมูลนั้นปางหน้าเสมอข้อดี ข้อดี.   ใช้งานง่ายและใช้หน่วยความจำน้อยข้อเสีย ข้อเสีย.   ต้องเข้าถึงหลายข้อมูลเพื่อที่จะย้ายเพียงครั้งเดียว และใช้เวลามากเมื่อข้อมูลที่ต้องการมีตำแหน่งอยู่ไกลตัวอย่างโค้ดในภาษา Python ตัวอย่างโค้ดในภาษา Python. def transpose(array,user):วิเคราะห์ความซับซ้อนของโค้ด วิเคราะห์ความซับซ้อนของโค้ด. จากโค้ดในบรรทัดที่ 2 มีความซับซ้อนเป็น formula_2 จึงทำให้ best case และ worst case โค้ดมีความซับซ้อน formula_2 เหมือนกัน</doc>
